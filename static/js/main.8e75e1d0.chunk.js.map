{"version":3,"sources":["components/TodoContainer.js","components/DoneTodoContainer.js","components/GroupItem.js","components/GroupList.js","components/Nav copy.js","components/Form.js","components/TodoItem.js","components/TodoItemList.js","components/DoneItemList.js","ModalPortal.js","components/AddGroup.js","App.js","index.js"],"names":["TodoContainer","this","props","groups","form","children","title","selected","className","Component","DoneListContainer","GroupItem","groupId","onSelect","active","classNames","onClick","GroupList","selectedId","groupList","map","key","NavContainer","Form","value","onChange","onKeyPress","onInsert","placeholder","TodoItem","id","text","isDone","onToggle","onRemove","type","checked","readOnly","e","TodoItemList","todos","groupTitle","todoList","filter","item","todoId","DoneItemList","ModalPortal","el","document","getElementById","ReactDom","createPortal","AddGroupPopup","onCreate","display","dismiss","App","state","input","popupInput","popupDisplay","handleInputChange","setState","target","handleInputUpdate","index","findIndex","updatedInput","updatedTodo","handleInputInsert","concat","handleKeyPress","handleToggle","newTodo","handleRemove","handlePopup","handlePopupClose","handlePopupInput","handlePopupInsert","handleSelectedGroup","ReactDOM","render"],"mappings":"8YAwBeA,G,uLApBD,IAAD,EACsCC,KAAKC,MAAzCC,EADF,EACEA,OAAQC,EADV,EACUA,KAAMC,EADhB,EACgBA,SACfC,EAAQH,EAFT,EAC0BI,UACAD,MAE3B,OAEI,0BAAME,UAAU,iBACZ,uBAAGA,UAAU,aAAaF,GAC1B,6BAASE,UAAU,qBACbJ,GAEN,6BAASI,UAAU,qBACdH,Q,GAbGI,cCWbC,EAXW,SAAC,GAAgB,IAAfL,EAAc,EAAdA,SACxB,OACI,0BAAMG,UAAU,iBACZ,0BAAMA,UAAU,mBAAhB,mCACA,6BAASA,UAAU,4BACdH,K,oCCSFM,E,iLAZD,IAAD,EACwCV,KAAKC,MAA1CU,EADH,EACGA,QAASC,EADZ,EACYA,SAAUP,EADtB,EACsBA,MAAOQ,EAD7B,EAC6BA,OAClC,OACI,yBAAKN,UAAWO,IAAW,qBAAsB,CAACD,WAAUE,QAAS,kBAAMH,EAASD,KAChF,yBAAKJ,UAAU,cACVF,Q,GANGG,aCoBTQ,E,iLApBD,IAAD,EACkChB,KAAKC,MAArCgB,EADF,EACEA,WAAYL,EADd,EACcA,SACbM,EAFD,EACwBhB,OACJiB,KAAI,gBAAER,EAAF,EAAEA,QAASN,EAAX,EAAWA,MAAX,OACzB,kBAAC,EAAD,CACIM,QAASA,EACTN,MAAOA,EACPO,SAAUA,EACVQ,IAAKT,EACLE,OAAQF,IAAYM,OAG5B,OACI,6BACKC,O,GAdOV,aCwBTa,E,iLAnBD,IAAD,EAC2CrB,KAAKC,MAA9CC,EADF,EACEA,OAAQa,EADV,EACUA,QAAST,EADnB,EACmBA,SAAUW,EAD7B,EAC6BA,WAElC,OACQ,yBAAKV,UAAU,gBACX,yBAAKA,UAAU,aACX,kBAAC,EAAD,CAAWL,OAAQA,EAAQU,SAAUN,EAAUW,WAAYA,KAE/D,yBAAKV,UAAU,cAGf,4BAAQA,UAAU,cAAcQ,QAAS,kBAAMA,MAA/C,U,GAbOP,aCcZc,G,MAjBF,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACzC,OACI,yBAAKnB,UAAU,iBACX,2BACIA,UAAU,eACVgB,MAAQA,EACRC,SAAWA,EACXC,WAAaA,EACbE,YAAY,uDAEhB,4BAAQpB,UAAU,kBAAkBQ,QAASW,GAA7C,QCgBGE,G,uLArBD,IAAD,EACoD5B,KAAKC,MAAvD4B,EADF,EACEA,GAAIC,EADN,EACMA,KAAMC,EADZ,EACYA,OAAQC,EADpB,EACoBA,SAAUC,EAD9B,EAC8BA,SAAUT,EADxC,EACwCA,SAE7C,OACI,yBAAKjB,UAAU,qBACX,yBAAKA,UAAU,oBAEX,2BAAO2B,KAAK,WAAWC,QAASJ,EAAQhB,QAAS,kBAAMiB,EAASH,IAAKO,UAAQ,KAEjF,yBAAK7B,UAAWO,IAAW,eAAgB,CAACiB,YACxC,2BAAOR,MAAOO,EAAMN,SAAU,SAACa,GAAD,OAAOb,EAASK,EAAIQ,OAGtD,yBAAK9B,UAAU,YAAYQ,QAAS,kBAAMkB,EAASJ,KAAnD,U,GAfOrB,cCiCR8B,E,iLAjCD,IAAD,EAC6DtC,KAAKC,MAA/DsC,EADH,EACGA,MAAOP,EADV,EACUA,SAAUC,EADpB,EACoBA,SAAUT,EAD9B,EAC8BA,SAC7BgB,EAFD,EACwCtC,OADxC,EACgDI,UACjBD,MAK9BoC,EAJaF,EAAMG,QAAO,SAAAC,GAAI,OAAIA,EAAKH,aAAeA,KAElCE,QAAO,SAAAC,GAAI,OAAoB,IAAhBA,EAAKZ,UAEtBZ,KAEhB,gBAAEyB,EAAF,EAAEA,OAAQd,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,OAAhB,OACI,kBAAC,EAAD,CACIF,GAAIe,EACJd,KAAMA,EACNC,OAAQA,EACRC,SAAUA,EACVC,SAAUA,EACVT,SAAUA,EACVJ,IAAKwB,OAKjB,OACI,6BACKH,O,GA1BMjC,aCgCZqC,G,uLA9BD,IAAD,EAC6D7C,KAAKC,MAA/DsC,EADH,EACGA,MAAOP,EADV,EACUA,SAAUC,EADpB,EACoBA,SAAUT,EAD9B,EAC8BA,SAC7BgB,EAFD,EACwCtC,OADxC,EACgDI,UACjBD,MAI9BoC,EAHaF,EAAMG,QAAO,SAAAC,GAAI,OAAIA,EAAKH,aAAeA,KAEhCE,QAAO,SAAAC,GAAI,OAAoB,IAAhBA,EAAKZ,UACtBZ,KAEtB,gBAAEyB,EAAF,EAAEA,OAAQd,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,OAAhB,OACI,kBAAC,EAAD,CACIF,GAAIe,EACJd,KAAMA,EACNC,OAAQA,EACRC,SAAUA,EACVC,SAAUA,EACVT,SAAUA,EACVJ,IAAKwB,OAKjB,OACI,6BACKH,O,GAzBUjC,cCGZsC,EALK,SAAC,GAAiB,IAAhB1C,EAAe,EAAfA,SACZ2C,EAAKC,SAASC,eAAe,SACnC,OAAOC,IAASC,aAAa/C,EAAU2C,ICe5BK,E,iLAfD,IAAD,EACoDpD,KAAKC,MAAnD6B,GADN,EACED,GADF,EACMC,MAAMN,EADZ,EACYA,SAAU6B,EADtB,EACsBA,SAAUC,EADhC,EACgCA,QAASC,EADzC,EACyCA,QAC9C,OACI,yBAAKhD,UAAWO,IAAW,yBAA0B,CAACwC,aAClD,yBAAK/C,UAAU,WAAWQ,QAAS,kBAAMwC,MAAzC,KACA,wDACA,2BAAOhC,MAAOO,EAAMN,SAAU,SAACa,GAAD,OAAOb,EAASa,MAC9C,4BAAQ9B,UAAU,kBAAkBQ,QAAS,SAACsB,GAAD,OAAOgB,EAAShB,KAA7D,a,GARY7B,aC8MbgD,E,2MAnMbZ,OAAS,E,EACTjC,QAAU,E,EAEV8C,MAAQ,CACNC,MAAO,GACPC,WAAY,GACZ1C,WAAY,EACZsB,MAAO,CACL,CAACK,OAAQ,EAAGd,KAAM,gBAAiBC,QAAQ,EAAOS,WAAW,UAE/DtC,OAAQ,CACN,CAACS,QAAS,EAAGN,MAAO,UAEtBuD,cAAc,G,EAGhBC,kBAAoB,SAACxB,GACnB,EAAKyB,SAAS,CACZJ,MAAOrB,EAAE0B,OAAOxC,S,EAIpByC,kBAAoB,SAACnC,EAAIQ,GAAO,IACvBE,EAAS,EAAKkB,MAAdlB,MAED0B,EAAQ1B,EAAM2B,WAAU,SAAAvB,GAAI,OAAIA,EAAKC,SAAWf,KAChDvB,EAAWiC,EAAM0B,GACjBE,EAAe9B,EAAE0B,OAAOxC,MAExB6C,EAAW,YAAO7B,GACxB6B,EAAYH,GAAZ,eACK3D,EADL,CAEEwB,KAAMqC,IAGR,EAAKL,SAAS,CACZvB,MAAO6B,K,EAIXC,kBAAoB,WAAO,IAAD,EACmB,EAAKZ,MAAzCC,EADiB,EACjBA,MAAOnB,EADU,EACVA,MACRC,EAFkB,EACHtC,OADG,EACKe,YACSZ,MAEtC,EAAKyD,SAAS,CACZJ,MAAO,GACPnB,MAAOA,EAAM+B,OAAO,CAClB1B,OAAQ,EAAKA,SACbd,KAAM4B,EACN3B,QAAQ,EACRS,WAAYA,O,EAKlB+B,eAAiB,SAAClC,GAEH,UAAVA,EAAEjB,KACH,EAAKiD,qB,EAITG,aAAe,SAAC3C,GAAQ,IACfU,EAAS,EAAKkB,MAAdlB,MAGD0B,EAAQ1B,EAAM2B,WAAU,SAAAvB,GAAI,OAAIA,EAAKC,SAAWf,KAEhDvB,EAAWiC,EAAM0B,GAEjBQ,EAAO,YAAOlC,GAEpBkC,EAAQR,GAAR,eACK3D,EADL,CAEEyB,QAASzB,EAASyB,SAGpB,EAAK+B,SAAS,CACZvB,MAAOkC,K,EAIXC,aAAe,SAAC7C,GAAQ,IACfU,EAAS,EAAKkB,MAAdlB,MAEP,EAAKuB,SAAS,CACZvB,MAAOA,EAAMG,QAAO,SAAAC,GAAI,OAAIA,EAAKC,SAAWf,Q,EAKhD8C,YAAc,WAAO,IACZf,EAAgB,EAAKH,MAArBG,aAEP,EAAKE,SAAS,CACVF,cAAeA,K,EAKrBgB,iBAAmB,WAAO,IACjBhB,EAAgB,EAAKH,MAArBG,aACP,EAAKE,SAAS,CACZF,cAAeA,K,EAInBiB,iBAAmB,SAACxC,GAClB,EAAKyB,SAAS,CACZH,WAAYtB,EAAE0B,OAAOxC,S,EAIzBuD,kBAAoB,WAAO,IAAD,EACK,EAAKrB,MAA3BE,EADiB,EACjBA,WAAYzD,EADK,EACLA,OAED,KAAfyD,IACD,EAAKG,SAAS,CACZH,WAAY,GACZzD,OAAQA,EAAOoE,OAAO,CACpB3D,QAAS,EAAKA,UACdN,MAAOsD,MAIX,EAAKiB,qB,EAITG,oBAAsB,SAAClD,GAAQ,IACtB3B,EAAU,EAAKuD,MAAfvD,OACP,EAAK4D,SAAS,CACZ7C,WAAYf,EAAO2B,GAAIlB,W,wEAIjB,IAAD,EAC8DX,KAAKyD,MAAnEC,EADA,EACAA,MAAOC,EADP,EACOA,WAAYpB,EADnB,EACmBA,MAAOrC,EAD1B,EAC0BA,OAAQ0D,EADlC,EACkCA,aAAc3C,EADhD,EACgDA,WAErD4C,EAWE7D,KAXF6D,kBACAQ,EAUErE,KAVFqE,kBACAE,EASEvE,KATFuE,eACAC,EAQExE,KARFwE,aACAE,EAOE1E,KAPF0E,aACAV,EAMEhE,KANFgE,kBACAW,EAKE3E,KALF2E,YACAG,EAIE9E,KAJF8E,kBACAD,EAGE7E,KAHF6E,iBACAD,EAEE5E,KAFF4E,iBACAG,EACE/E,KADF+E,oBAGF,OACE,yBAAKxE,UAAU,QACb,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEuB,KAAM6B,EACNL,QAASM,EACTP,SAAUyB,EACVtD,SAAUqD,EACVtB,QAASqB,KAIb,kBAAC,EAAD,CAActE,SAAUyE,EAAqB7E,OAAQA,EAAQa,QAAS4D,EAAa1D,WAAYA,IAE/F,yBAAKV,UAAU,YACb,kBAAC,EAAD,CACAJ,KACE,kBAAC,EAAD,CACEoB,MAAOmC,EACPjC,WAAY8C,EACZ/C,SAAUqC,EACVnC,SAAU2C,IAGZnE,OAAQA,EACRI,SAAUW,GACR,kBAAC,EAAD,CACEsB,MAAOA,EAAOP,SAAUwC,EAAcvC,SAAUyC,EAAclD,SAAUwC,EAAmB9D,OAAQA,EAAQI,SAAUW,KAG3H,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEsB,MAAOA,EAAOP,SAAUwC,EAAcvC,SAAUyC,EAAclD,SAAUwC,EAAmB9D,OAAQA,EAAQI,SAAUW,W,GA1LjHT,aCNlBwE,IAASC,OAAO,kBAAC,EAAD,MAASjC,SAASC,eAAe,W","file":"static/js/main.8e75e1d0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./css/Todo.css\";\n\nclass TodoContainer extends Component {\n    render() {\n        const {groups, form, children, selected} = this.props;\n        const title = groups[selected].title;\n    \n            return (\n                \n                <main className=\"todoContainer\">\n                    <p className=\"groupName\">{title}</p>\n                    <section className=\"todoFormContainer\">\n                        { form }\n                    </section>\n                    <section className=\"todoListContainer\">\n                        {children}\n                    </section>\n                </main>\n            );\n    }\n}\n\n\nexport default TodoContainer;","import React from \"react\";\nimport \"./css/Todo.css\";\n\nconst DoneListContainer = ({children}) => {\n    return (\n        <main className=\"todoContainer\">\n            <span className=\"doneList__title\">완료된 항목</span>\n            <section className=\"todoListContainer isDone\">\n                {children}\n            </section>\n        </main>\n    );\n}\n\nexport default DoneListContainer;","import React, { Component } from \"react\";\nimport \"./css/GroupItem.css\";\nimport classNames from \"classnames\";\n\nclass GroupItem extends Component {\n    render() {\n        const { groupId, onSelect, title, active } = this.props;\n        return (\n            <div className={classNames(\"groupItemContainer\", {active})} onClick={() => onSelect(groupId)}>\n                <div className=\"groupTitle\">\n                    {title}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GroupItem;\n","import React, { Component } from \"react\";\nimport GroupItem from \"./GroupItem\"\n\nclass GroupList extends Component {\n    render() {\n        const {selectedId, onSelect, groups} = this.props\n        const groupList = groups.map(({groupId, title}) => \n            <GroupItem \n                groupId={groupId}\n                title={title}\n                onSelect={onSelect}\n                key={groupId}\n                active={groupId === selectedId}\n            />\n        )\n        return (\n            <div>\n                {groupList}\n            </div>\n            \n        );\n    }\n}\n\nexport default GroupList;","import React, { Component } from \"react\";\nimport \"./css/Nav.css\"\nimport \"./css/AddGroup.css\"\nimport GroupList from \"./GroupList\";\n\n\nclass NavContainer extends Component {\n\n    render() {\n        const {groups, onClick, selected, selectedId} = this.props;\n\n        return (\n                <div className=\"navContainer\">\n                    <div className=\"groupList\">\n                        <GroupList groups={groups} onSelect={selected} selectedId={selectedId}/>\n                    </div>\n                    <div className=\"doneGroup\">\n                        \n                    </div>\n                    <button className=\"groupAddBtn\" onClick={() => onClick()}>+</button>\n                    \n                </div>\n        );\n    }\n    \n}\n\nexport default NavContainer;","import React from \"react\";\nimport \"./css/Form.css\";\n\nconst Form = ({ value, onChange, onKeyPress, onInsert }) => {\n    return (\n        <div className=\"formContainer\">\n            <input \n                className=\"form-control\"\n                value={ value }\n                onChange={ onChange }\n                onKeyPress={ onKeyPress }\n                placeholder=\"할일을 입력하세요.\"\n            />\n            <button className=\"btn btn-primary\" onClick={onInsert}>\n                +\n            </button>\n        </div>\n    );\n}\n\nexport default Form","import React, {Component} from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/TodoItem.css\";\n\n//const TodoItem = ({}) ... 컴포넌트 최적화를 위해(라이프사이클 사용가능) class component를 사용한다\n\nclass TodoItem extends Component {\n    \n    render() {\n        const {id, text, isDone, onToggle, onRemove, onChange} = this.props;\n\n        return (\n            <div className=\"todoItemContainer\">\n                <div className=\"input-group-text\">\n                    {/* onClick={onToggle{id}}로 하면 렌더링 될 때 바로 실행됨! */}\n                    <input type=\"checkbox\" checked={isDone} onClick={() => onToggle(id)} readOnly/>\n                </div>\n                <div className={classNames(\"todoItemText\", {isDone})}>\n                    <input value={text} onChange={(e) => onChange(id, e)}/>\n                    {/* <div>{text}</div> */}\n                </div>\n                <div className=\"removeBtn\" onClick={() => onRemove(id)}>\n                    X\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TodoItem;","import React, {Component} from \"react\";\nimport TodoItem from \"./TodoItem\";\n\n//TodoItem 을 렌더링 해주는 역할\nclass TodoItemList extends Component {\n\n    render() {\n        const { todos, onToggle, onRemove, onChange, groups, selected } = this.props;\n        const groupTitle = groups[selected].title;\n        const groupMatch = todos.filter(item => item.groupTitle === groupTitle)\n\n        const beTodo = groupMatch.filter(item => item.isDone === false)\n\n        const todoList = beTodo.map(\n                //비구조화 할당. 파라미터는 1개이다\n                ({todoId, text, isDone}) => (\n                    <TodoItem \n                        id={todoId}\n                        text={text}\n                        isDone={isDone}\n                        onToggle={onToggle}\n                        onRemove={onRemove}\n                        onChange={onChange}\n                        key={todoId}\n                    />\n                )\n            );\n        \n            return (\n                <div>\n                    {todoList}\n                </div>\n            );\n\n        \n    }\n}\n\n\nexport default TodoItemList;\n\n\n","import React, {Component} from \"react\";\nimport TodoItem from \"./TodoItem\";\n\n//TodoItem 을 렌더링 해주는 역할\nclass DoneItemList extends Component {\n\n    render() {\n        const { todos, onToggle, onRemove, onChange, groups, selected } = this.props;\n        const groupTitle = groups[selected].title;\n        const groupMatch = todos.filter(item => item.groupTitle === groupTitle)\n\n        const DoneTodo = groupMatch.filter(item => item.isDone === true)\n        const todoList = DoneTodo.map(\n            //비구조화 할당. 파라미터는 1개이다\n            ({todoId, text, isDone}) => (\n                <TodoItem \n                    id={todoId}\n                    text={text}\n                    isDone={isDone}\n                    onToggle={onToggle}\n                    onRemove={onRemove}\n                    onChange={onChange}\n                    key={todoId}\n                />\n            )\n        );\n\n        return (\n            <div>\n                {todoList}\n            </div>\n        );\n    }\n}\n\n\nexport default DoneItemList;\n\n","import ReactDom from \"react-dom\";\n\nconst ModalPortal = ({children})  => {\n    const el = document.getElementById('modal');\n    return ReactDom.createPortal(children, el);\n}\n\nexport default ModalPortal;","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n\nclass AddGroupPopup extends Component {\n    render() {\n        const {id, text, onChange, onCreate, display, dismiss} = this.props;\n        return (\n            <div className={classNames(\"addGroupPopupContainer\", {display})}>\n                <div className=\"closeBtn\" onClick={() => dismiss()}>x</div>\n                <p>그룹 추가</p>\n                <input value={text} onChange={(e) => onChange(e)}/>\n                <button className=\"btn btn-primary\" onClick={(e) => onCreate(e)}>Save</button>\n\n            </div>\n        )\n    }\n\n}\n\nexport default AddGroupPopup;","import React, {Component} from 'react';\nimport TodoListContainer from './components/TodoContainer';\nimport DoneListContainer from \"./components/DoneTodoContainer\";\nimport NavContainer from './components/Nav copy';\nimport Form from \"./components/Form\";\nimport TodoItemList from \"./components/TodoItemList\";\nimport \"./App.css\";\nimport DoneItemList from './components/DoneItemList';\nimport ModalPortal from './ModalPortal';\nimport AddGroupPopup from './components/AddGroup';\n\n\nclass App extends Component {\n  \n  todoId = 1;\n  groupId = 1;\n\n  state = {\n    input: '',\n    popupInput: '',\n    selectedId: 0,\n    todos: [\n      {todoId: 0, text: \"Make todo App\", isDone: false, groupTitle:\"Inbox\"},\n    ],\n    groups: [\n      {groupId: 0, title: \"Inbox\"},\n    ],\n    popupDisplay: false\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  handleInputUpdate = (id, e) => {\n    const {todos} = this.state;\n\n    const index = todos.findIndex(item => item.todoId === id);\n    const selected = todos[index]\n    const updatedInput = e.target.value;\n\n    const updatedTodo = [...todos]\n    updatedTodo[index] = {\n      ...selected,\n      text: updatedInput\n    }\n\n    this.setState({\n      todos: updatedTodo\n    })\n  }\n\n  handleInputInsert = () => {\n    const {input, todos, groups, selectedId} = this.state\n    const groupTitle = groups[selectedId].title\n\n    this.setState({\n      input: '',\n      todos: todos.concat({\n        todoId: this.todoId++,\n        text: input,\n        isDone: false,\n        groupTitle: groupTitle\n      })  \n    });\n  }\n\n  handleKeyPress = (e) => {\n    // 엔터키가 눌리면 Insert func.을 실행한다.\n    if(e.key === 'Enter') {\n      this.handleInputInsert();\n    }\n  }\n\n  handleToggle = (id) => {\n    const {todos} = this.state;\n    \n    //1. 선택된 todoItem의 Index 정보 가져오기\n    const index = todos.findIndex(item => item.todoId === id)\n    //2. 선택된 arr[index] 값 할당\n    const selected = todos[index] // -> {id:1, text:..., idDone: false}\n    //3. todos arr 복사\n    const newTodo = [...todos]\n    //4. 복사된 arr에 값 덮어씌우기\n    newTodo[index] = {\n      ...selected, // ...selected = id:1, text:..., isDone: false\n      isDone: !selected.isDone\n    }\n\n    this.setState({\n      todos: newTodo\n    })\n  }\n\n  handleRemove = (id) => {\n    const {todos} = this.state;\n\n    this.setState({\n      todos: todos.filter(item => item.todoId !== id)\n    })\n\n  }\n\n  handlePopup = () => {\n    const {popupDisplay} = this.state;\n\n    this.setState({\n        popupDisplay: !popupDisplay\n        }   \n    )\n  }\n\n  handlePopupClose = () => {\n    const {popupDisplay} = this.state;\n    this.setState({\n      popupDisplay: !popupDisplay\n    })\n  }\n\n  handlePopupInput = (e) => {\n    this.setState({\n      popupInput: e.target.value\n    })\n  }\n  \n  handlePopupInsert = () => {\n    const {popupInput, groups} = this.state;\n\n    if(popupInput !== '') {\n      this.setState({\n        popupInput: '',\n        groups: groups.concat({\n          groupId: this.groupId++,\n          title: popupInput\n        })\n      })\n  \n      this.handlePopupClose()\n    }\n  }\n\n  handleSelectedGroup = (id) => {\n    const {groups} = this.state;\n    this.setState({\n      selectedId: groups[id].groupId\n    })\n  }\n\n  render() {\n    const {input, popupInput, todos, groups, popupDisplay, selectedId} = this.state;\n    const {\n      handleInputChange,\n      handleInputInsert,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n      handleInputUpdate,\n      handlePopup,\n      handlePopupInsert,\n      handlePopupInput,\n      handlePopupClose,\n      handleSelectedGroup\n    } = this;\n\n    return (\n      <div className=\"wrap\">\n        <ModalPortal>\n          <AddGroupPopup\n            text={popupInput} \n            display={popupDisplay} \n            onCreate={handlePopupInsert}\n            onChange={handlePopupInput}\n            dismiss={handlePopupClose}\n          />\n        </ModalPortal>\n\n        <NavContainer selected={handleSelectedGroup} groups={groups} onClick={handlePopup} selectedId={selectedId}/>\n\n        <div className=\"todoWrap\">\n          <TodoListContainer \n          form={(\n            <Form \n              value={input}\n              onKeyPress={handleKeyPress}\n              onChange={handleInputChange}\n              onInsert={handleInputInsert}\n            />\n            )} \n            groups={groups} \n            selected={selectedId}>\n              <TodoItemList \n                todos={todos} onToggle={handleToggle} onRemove={handleRemove} onChange={handleInputUpdate} groups={groups} selected={selectedId}\n              />\n          </TodoListContainer>\n          <DoneListContainer>\n            <DoneItemList \n              todos={todos} onToggle={handleToggle} onRemove={handleRemove} onChange={handleInputUpdate} groups={groups} selected={selectedId}\n            />\n          </DoneListContainer>\n        </div>\n       \n      </div>\n        \n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}